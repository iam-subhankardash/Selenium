{"name": "test_selenium_locator_negative", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".lead text-danger\"}\n  (Session info: chrome=129.0.6668.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF642CBB095+29557]\n\t(No symbol) [0x00007FF642C2FA50]\n\t(No symbol) [0x00007FF642AEB56A]\n\t(No symbol) [0x00007FF642B3F695]\n\t(No symbol) [0x00007FF642B3F8EC]\n\t(No symbol) [0x00007FF642B8B777]\n\t(No symbol) [0x00007FF642B671CF]\n\t(No symbol) [0x00007FF642B8851C]\n\t(No symbol) [0x00007FF642B66F33]\n\t(No symbol) [0x00007FF642B3116F]\n\t(No symbol) [0x00007FF642B322D1]\n\tGetHandleVerifier [0x00007FF642FEC96D+3378253]\n\tGetHandleVerifier [0x00007FF643038497+3688311]\n\tGetHandleVerifier [0x00007FF64302D1CB+3642539]\n\tGetHandleVerifier [0x00007FF642D7A6B6+813462]\n\t(No symbol) [0x00007FF642C3AB5F]\n\t(No symbol) [0x00007FF642C36B74]\n\t(No symbol) [0x00007FF642C36D10]\n\t(No symbol) [0x00007FF642C25C1F]\n\tBaseThreadInitThunk [0x00007FFB40F0257D+29]\n\tRtlUserThreadStart [0x00007FFB42F4AF08+40]", "trace": "def test_selenium_locator_negative():\n        driver = webdriver.Chrome()\n        driver.get(\"https://katalon-demo-cura.herokuapp.com/\")\n        # <a id=\"btn-make-appointment\" href=\"./profile.php#login\" class=\"btn btn-dark btn-lg\">Make Appointment</a>\n        make_appointment = driver.find_element(By.ID, \"btn-make-appointment\")\n        make_appointment.click()\n        time.sleep(2)\n        assert driver.current_url == \"https://katalon-demo-cura.herokuapp.com/profile.php#login\"\n        user_name = driver.find_element(By.ID, \"txt-username\")\n        user_name.send_keys(\"admin\")\n        time.sleep(2)\n        password = driver.find_element(By.ID, \"txt-password\")\n        password.send_keys(\"password\")\n        time.sleep(2)\n        login_button = driver.find_element(By.ID, \"btn-login\")\n        login_button.click()\n>       error_message = driver.find_element(By.CLASS_NAME, \"lead text-danger\")\n\nsrc\\ex17102024\\Lab005.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BF500F6CF0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF642C25C1F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB40F0257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFB42F4AF08+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".lead text-danger\"}\nE         (Session info: chrome=129.0.6668.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF642CBB095+29557]\nE       \t(No symbol) [0x00007FF642C2FA50]\nE       \t(No symbol) [0x00007FF642AEB56A]\nE       \t(No symbol) [0x00007FF642B3F695]\nE       \t(No symbol) [0x00007FF642B3F8EC]\nE       \t(No symbol) [0x00007FF642B8B777]\nE       \t(No symbol) [0x00007FF642B671CF]\nE       \t(No symbol) [0x00007FF642B8851C]\nE       \t(No symbol) [0x00007FF642B66F33]\nE       \t(No symbol) [0x00007FF642B3116F]\nE       \t(No symbol) [0x00007FF642B322D1]\nE       \tGetHandleVerifier [0x00007FF642FEC96D+3378253]\nE       \tGetHandleVerifier [0x00007FF643038497+3688311]\nE       \tGetHandleVerifier [0x00007FF64302D1CB+3642539]\nE       \tGetHandleVerifier [0x00007FF642D7A6B6+813462]\nE       \t(No symbol) [0x00007FF642C3AB5F]\nE       \t(No symbol) [0x00007FF642C36B74]\nE       \t(No symbol) [0x00007FF642C36D10]\nE       \t(No symbol) [0x00007FF642C25C1F]\nE       \tBaseThreadInitThunk [0x00007FFB40F0257D+29]\nE       \tRtlUserThreadStart [0x00007FFB42F4AF08+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1729318840322, "stop": 1729318852636, "uuid": "392a0533-d776-40a5-8f13-b8466bb2123b", "historyId": "e636fa933b5723aff0206f870749b429", "testCaseId": "e636fa933b5723aff0206f870749b429", "fullName": "src.ex17102024.Lab005#test_selenium_locator_negative", "labels": [{"name": "parentSuite", "value": "src.ex17102024"}, {"name": "suite", "value": "Lab005"}, {"name": "host", "value": "DESKTOP-0HAARRU"}, {"name": "thread", "value": "17296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.ex17102024.Lab005"}]}